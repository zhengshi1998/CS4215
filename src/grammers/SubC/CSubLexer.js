// Generated from .\CSub.g4 by ANTLR 4.12.0
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,44,263,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,
3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,
5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,
9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,
15,1,15,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,
1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,5,23,191,8,23,10,23,12,23,194,
9,23,1,23,1,23,1,24,1,24,5,24,200,8,24,10,24,12,24,203,9,24,1,24,1,24,1,
25,4,25,208,8,25,11,25,12,25,209,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,
1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,
34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,
1,40,1,41,1,41,1,42,4,42,253,8,42,11,42,12,42,254,1,43,1,43,5,43,259,8,43,
10,43,12,43,262,9,43,1,192,0,44,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,1,0,4,
3,0,9,10,13,13,32,32,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
95,97,122,267,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,
0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,
55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,
0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,
1,89,1,0,0,0,3,91,1,0,0,0,5,95,1,0,0,0,7,100,1,0,0,0,9,106,1,0,0,0,11,115,
1,0,0,0,13,122,1,0,0,0,15,128,1,0,0,0,17,131,1,0,0,0,19,136,1,0,0,0,21,139,
1,0,0,0,23,142,1,0,0,0,25,144,1,0,0,0,27,147,1,0,0,0,29,149,1,0,0,0,31,151,
1,0,0,0,33,154,1,0,0,0,35,157,1,0,0,0,37,162,1,0,0,0,39,166,1,0,0,0,41,171,
1,0,0,0,43,177,1,0,0,0,45,182,1,0,0,0,47,188,1,0,0,0,49,197,1,0,0,0,51,207,
1,0,0,0,53,213,1,0,0,0,55,215,1,0,0,0,57,217,1,0,0,0,59,219,1,0,0,0,61,221,
1,0,0,0,63,223,1,0,0,0,65,225,1,0,0,0,67,231,1,0,0,0,69,233,1,0,0,0,71,235,
1,0,0,0,73,238,1,0,0,0,75,241,1,0,0,0,77,243,1,0,0,0,79,245,1,0,0,0,81,247,
1,0,0,0,83,249,1,0,0,0,85,252,1,0,0,0,87,256,1,0,0,0,89,90,5,58,0,0,90,2,
1,0,0,0,91,92,5,102,0,0,92,93,5,111,0,0,93,94,5,114,0,0,94,4,1,0,0,0,95,
96,5,103,0,0,96,97,5,111,0,0,97,98,5,116,0,0,98,99,5,111,0,0,99,6,1,0,0,
0,100,101,5,98,0,0,101,102,5,114,0,0,102,103,5,101,0,0,103,104,5,97,0,0,
104,105,5,107,0,0,105,8,1,0,0,0,106,107,5,99,0,0,107,108,5,111,0,0,108,109,
5,110,0,0,109,110,5,116,0,0,110,111,5,105,0,0,111,112,5,110,0,0,112,113,
5,117,0,0,113,114,5,101,0,0,114,10,1,0,0,0,115,116,5,114,0,0,116,117,5,101,
0,0,117,118,5,116,0,0,118,119,5,117,0,0,119,120,5,114,0,0,120,121,5,110,
0,0,121,12,1,0,0,0,122,123,5,119,0,0,123,124,5,104,0,0,124,125,5,105,0,0,
125,126,5,108,0,0,126,127,5,101,0,0,127,14,1,0,0,0,128,129,5,105,0,0,129,
130,5,102,0,0,130,16,1,0,0,0,131,132,5,101,0,0,132,133,5,108,0,0,133,134,
5,115,0,0,134,135,5,101,0,0,135,18,1,0,0,0,136,137,5,43,0,0,137,138,5,43,
0,0,138,20,1,0,0,0,139,140,5,45,0,0,140,141,5,45,0,0,141,22,1,0,0,0,142,
143,5,38,0,0,143,24,1,0,0,0,144,145,5,61,0,0,145,146,5,61,0,0,146,26,1,0,
0,0,147,148,5,60,0,0,148,28,1,0,0,0,149,150,5,62,0,0,150,30,1,0,0,0,151,
152,5,62,0,0,152,153,5,61,0,0,153,32,1,0,0,0,154,155,5,60,0,0,155,156,5,
61,0,0,156,34,1,0,0,0,157,158,5,118,0,0,158,159,5,111,0,0,159,160,5,105,
0,0,160,161,5,100,0,0,161,36,1,0,0,0,162,163,5,105,0,0,163,164,5,110,0,0,
164,165,5,116,0,0,165,38,1,0,0,0,166,167,5,99,0,0,167,168,5,104,0,0,168,
169,5,97,0,0,169,170,5,114,0,0,170,40,1,0,0,0,171,172,5,118,0,0,172,173,
5,111,0,0,173,174,5,105,0,0,174,175,5,100,0,0,175,176,5,42,0,0,176,42,1,
0,0,0,177,178,5,105,0,0,178,179,5,110,0,0,179,180,5,116,0,0,180,181,5,42,
0,0,181,44,1,0,0,0,182,183,5,99,0,0,183,184,5,104,0,0,184,185,5,97,0,0,185,
186,5,114,0,0,186,187,5,42,0,0,187,46,1,0,0,0,188,192,5,39,0,0,189,191,9,
0,0,0,190,189,1,0,0,0,191,194,1,0,0,0,192,193,1,0,0,0,192,190,1,0,0,0,193,
195,1,0,0,0,194,192,1,0,0,0,195,196,5,39,0,0,196,48,1,0,0,0,197,201,5,34,
0,0,198,200,2,32,126,0,199,198,1,0,0,0,200,203,1,0,0,0,201,199,1,0,0,0,201,
202,1,0,0,0,202,204,1,0,0,0,203,201,1,0,0,0,204,205,5,34,0,0,205,50,1,0,
0,0,206,208,7,0,0,0,207,206,1,0,0,0,208,209,1,0,0,0,209,207,1,0,0,0,209,
210,1,0,0,0,210,211,1,0,0,0,211,212,6,25,0,0,212,52,1,0,0,0,213,214,5,43,
0,0,214,54,1,0,0,0,215,216,5,45,0,0,216,56,1,0,0,0,217,218,5,42,0,0,218,
58,1,0,0,0,219,220,5,47,0,0,220,60,1,0,0,0,221,222,5,37,0,0,222,62,1,0,0,
0,223,224,5,44,0,0,224,64,1,0,0,0,225,226,5,112,0,0,226,227,5,114,0,0,227,
228,5,105,0,0,228,229,5,110,0,0,229,230,5,116,0,0,230,66,1,0,0,0,231,232,
5,59,0,0,232,68,1,0,0,0,233,234,5,61,0,0,234,70,1,0,0,0,235,236,5,38,0,0,
236,237,5,38,0,0,237,72,1,0,0,0,238,239,5,124,0,0,239,240,5,124,0,0,240,
74,1,0,0,0,241,242,5,33,0,0,242,76,1,0,0,0,243,244,5,40,0,0,244,78,1,0,0,
0,245,246,5,41,0,0,246,80,1,0,0,0,247,248,5,123,0,0,248,82,1,0,0,0,249,250,
5,125,0,0,250,84,1,0,0,0,251,253,7,1,0,0,252,251,1,0,0,0,253,254,1,0,0,0,
254,252,1,0,0,0,254,255,1,0,0,0,255,86,1,0,0,0,256,260,7,2,0,0,257,259,7,
3,0,0,258,257,1,0,0,0,259,262,1,0,0,0,260,258,1,0,0,0,260,261,1,0,0,0,261,
88,1,0,0,0,262,260,1,0,0,0,6,0,192,201,209,254,260,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class CSubLexer extends antlr4.Lexer {

    static grammarFileName = "CSub.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "':'", "'for'", "'goto'", "'break'", "'continue'", 
                         "'return'", "'while'", "'if'", "'else'", "'++'", 
                         "'--'", "'&'", "'=='", "'<'", "'>'", "'>='", "'<='", 
                         "'void'", "'int'", "'char'", "'void*'", "'int*'", 
                         "'char*'", null, null, null, "'+'", "'-'", "'*'", 
                         "'/'", "'%'", "','", "'print'", "';'", "'='", "'&&'", 
                         "'||'", "'!'", "'('", "')'", "'{'", "'}'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          "CHAR", "STRING", "WS", "ADD", "SUB", "MUL", "DIV", 
                          "MOD", "COMMA", "PRINT", "COLON", "EQ", "AND", 
                          "OR", "NOT", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
                          "INT", "ID" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "CHAR", "STRING", 
                      "WS", "ADD", "SUB", "MUL", "DIV", "MOD", "COMMA", 
                      "PRINT", "COLON", "EQ", "AND", "OR", "NOT", "LPAREN", 
                      "RPAREN", "LCURLY", "RCURLY", "INT", "ID" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

CSubLexer.EOF = antlr4.Token.EOF;
CSubLexer.T__0 = 1;
CSubLexer.T__1 = 2;
CSubLexer.T__2 = 3;
CSubLexer.T__3 = 4;
CSubLexer.T__4 = 5;
CSubLexer.T__5 = 6;
CSubLexer.T__6 = 7;
CSubLexer.T__7 = 8;
CSubLexer.T__8 = 9;
CSubLexer.T__9 = 10;
CSubLexer.T__10 = 11;
CSubLexer.T__11 = 12;
CSubLexer.T__12 = 13;
CSubLexer.T__13 = 14;
CSubLexer.T__14 = 15;
CSubLexer.T__15 = 16;
CSubLexer.T__16 = 17;
CSubLexer.T__17 = 18;
CSubLexer.T__18 = 19;
CSubLexer.T__19 = 20;
CSubLexer.T__20 = 21;
CSubLexer.T__21 = 22;
CSubLexer.T__22 = 23;
CSubLexer.CHAR = 24;
CSubLexer.STRING = 25;
CSubLexer.WS = 26;
CSubLexer.ADD = 27;
CSubLexer.SUB = 28;
CSubLexer.MUL = 29;
CSubLexer.DIV = 30;
CSubLexer.MOD = 31;
CSubLexer.COMMA = 32;
CSubLexer.PRINT = 33;
CSubLexer.COLON = 34;
CSubLexer.EQ = 35;
CSubLexer.AND = 36;
CSubLexer.OR = 37;
CSubLexer.NOT = 38;
CSubLexer.LPAREN = 39;
CSubLexer.RPAREN = 40;
CSubLexer.LCURLY = 41;
CSubLexer.RCURLY = 42;
CSubLexer.INT = 43;
CSubLexer.ID = 44;



